MODULE FORMATSMODULE

! This module contains the various formats used througout the code,
! that define the configuration files. This enables corss referencing
! with the man pages and with each other.

! Also it guarantees that the merger tool and the routines that
! write the fedsk files have the same format.



! determines whether TECIN.DAT is in 
! long format of 2I12,3F25.17  (generated by tri2felong)  (.true.)
! or in
! short format of 2I12,3E14.6  (generated by tri2fe)      (.false.)
logical, save :: tecindatnps_long




!**** TECIN.DAT *******************

character(len=6), parameter :: FMT_tecin_dat_MeshCount   = '(4I12)'
character(len=6), parameter :: FMT_tecin_dat_MODEline    = '(11I5)'

character(len=6), parameter :: FMT_tecin_dat_ELMswitches = '(10I5)'
character(len=4), parameter :: FMT_tecin_dat_Nsurf       = '(I5)'
character(len=6), parameter :: FMT_tecin_dat_ELMcounts   = '(8I12)'


! this tecin.dat.partf.nps is written in C, 
! which creates spaces between the entries in the format. 
! So, while the format would be '5d%5d%5d%' in C, 
! this would not correspond to (3I5), but to '(I5,1X,I5,1X,I5)'.

! format for reading only the first column of the tecin.dat.partf.nps
character(len=4),  parameter :: FMT_tecin_partf_nps_1   = '(I5)'
! and read it again with the index, coordinates and number of neighbours  (1X = 1 whitespace)
character(len=42), parameter :: FMT_3D_tecin_partf_nps_2   = '(I5,1X,I12,1X,E14.0,1X,E14.0,1X,E14.0,I12)'
character(len=33), parameter :: FMT_2D_tecin_partf_nps_2   = '(I5,1X,I12,1X,E14.0,1X,E14.0,I12)'

character(len=8),  parameter :: FMT_tecin_partf_nps_neighbour = '(1X,I12)'


character(len=39), parameter :: FMT_tecin_partf_elm   = '(I5,1X,I12,1X,I12,1X,I12,1X,I12,1X,I12)'




! these two are also used in tri2fe.f, in meshgen/triangle-helpers
! but as such it does not reference to here.
! A modification here, will also require a mod in tri2fe and vice versa. 

#ifdef LongData
character(len=17), parameter :: FMT_tecin_dat_nps_2D = '(2I12,2(1PE14.0))'
character(len=17), parameter :: FMT_tecin_dat_nps_3D = '(2I12,3(1PE14.0))'
#else
character(len=17), parameter :: FMT_tecin_dat_nps_2D = '(2I12,2(1PE25.16))'
character(len=17), parameter :: FMT_tecin_dat_nps_3D = '(2I12,3(1PE25.16))'
#endif
character(len=6),  parameter :: FMT_tecin_dat_elm = '(6I12)'


character(len=9),  parameter ::  FMT_tecin_dat_bcs_LinkedNodes   = '(I5,2I12)' ! 1 DOF index, 2 vertex numbers.

!**** mechanical boundary conditions

character(len=12), parameter :: FMT_tecin_dat_bcs_ibc_2D   = '(I12,I5,2I5)'  ! ID, onset time, type on each of the coords
character(len=12), parameter :: FMT_tecin_dat_bcs_ibc_3D   = '(I12,I5,3I5)'  ! ID, onset time, type on each of the coords
character(len=15), parameter :: FMT_tecin_dat_bcs_bc_2D = '(I12,2E14.0)'
character(len=15), parameter :: FMT_tecin_dat_bcs_bc_3D = '(I12,3E14.0)'
character(len=15), parameter :: FMT_tecin_dat_bcs_iwink = '              '
character(len=15), parameter :: FMT_tecin_dat_bcs_wink  = '              '
character(len=15), parameter :: FMT_tecin_dat_bcs_euler = '              '

character(len=17), parameter :: FMT_tecin_slippery_nodes = '(2I12,3I5,3E14.0)' ! elemID, vertex ID, 3 weights, 3 differential forces
                                                                       ! in 2D, 3rd weight will be 0, and 3rd diff. force will be ommitted.
character(len=8),  parameter :: FMT_tecin_fault_parallel_surfaces = '(I12,I5)' ! element number, and side number (1,2 or 3)

character(len=16), parameter :: FMT_tecin_faulted_nodes = '(2I12,I5,3E14.0)' ! element number, node nr, application time, vector

character(len=16), parameter :: FMT_tecin_nSurface_nodes = '(I5)' ! number of surface nodes

character(len=14), parameter :: FMT_tecin_pressure      = '(I12,I5,E14.0)' ! element number, side ID, magnitude

character(len=17), parameter :: FMT_tecin_WinklerRestoringPress  = '(I12,I5,I6,E14.0)' 
! element number, side ID, onset time, magnitude


character(len=15), parameter :: FMT_tecin_initial_stresses = '(i12,i6,6E14.0)' ! 

character(len=8),  parameter :: FMT_tecin_FaultParallelSurfaces = '(I12,I5)' ! used by subroutine RSLSKEW

#ifdef SHEARZONE_TRACTIONS
character(len=12), parameter :: FMT_tecin_ShearTrax = '(I12,2E14.0)'
character(len=12), parameter :: FMT_tecin_ShearTraxQT = '(I12,4E14.0)'
#endif

#ifdef EXPERIMENTAL_FRICTION
character(len=16), parameter :: FMT_tecin_dat_friction_2D = "(I5,2I12,2E14.0)"
character(len=16), parameter :: FMT_tecin_dat_friction_3D = "(I5,3I12,2E14.0)"
#endif

!******** TEMPIN.DAT **********

character(len=14), parameter :: FMT_tempin_flux = '(I12,I5,E14.0)'


!**** output fedsk files ******** (stands for Finite Element DiSK)

#ifdef LongData
character(len=16), parameter :: FMT_fedsk_stressStrainRate_nstr1  = '(I12,1X,1E25.16)'
character(len=16), parameter :: FMT_fedsk_stressStrainRate_nstr3  = '(I12,1X,3E25.16)'
character(len=16), parameter :: FMT_fedsk_stressStrainRate_nstr4  = '(I12,1X,4E25.16)'
character(len=16), parameter :: FMT_fedsk_stressStrainRate_nstr5  = '(I12,1X,5E25.16)'
character(len=16), parameter :: FMT_fedsk_stressStrainRate_nstr6  = '(I12,1X,6E25.16)'
#else
character(len=16), parameter :: FMT_fedsk_stressStrainRate_nstr1  = '(I12,1X,1E15.6)'
character(len=16), parameter :: FMT_fedsk_stressStrainRate_nstr3  = '(I12,1X,3E15.6)'
character(len=16), parameter :: FMT_fedsk_stressStrainRate_nstr4  = '(I12,1X,4E15.6)'
character(len=16), parameter :: FMT_fedsk_stressStrainRate_nstr5  = '(I12,1X,5E15.6)'
character(len=16), parameter :: FMT_fedsk_stressStrainRate_nstr6  = '(I12,1X,6E15.6)'
#endif



#ifdef LongData
character(len=16), parameter :: FMT_fedsk2D_displacement  = '(I12,1X,2E25.16)' 
#else
character(len=16), parameter :: FMT_fedsk2D_displacement  = '(I12,1X,2E15.6)'
#endif

#ifdef LongData
character(len=16), parameter :: FMT_fedsk2D_velocities    = '(I12,1X,2E25.16)'
character(len=16), parameter :: FMT_fedsk2D_stress        = '(I12,1X,3E25.16)'  ! 3 for the 3 indep. tensor component
character(len=16), parameter :: FMT_fedsk2D_strain        = '(I12,1X,3E25.16)'  ! 3 for the 3 indep. tensor components
character(len=16), parameter :: FMT_fedsk2D_strain_rates  = '(I12,1X,3E25.16)'  ! 3 for the 3 indep. tensor components
#else
character(len=16), parameter :: FMT_fedsk2D_velocities    = '(I12,1X,2E15.6)'
character(len=16), parameter :: FMT_fedsk2D_stress        = '(I12,1X,3E15.6)'  ! 3 for the 3 indep. tensor components
character(len=16), parameter :: FMT_fedsk2D_strain        = '(I12,1X,3E15.6)'  ! 3 for the 3 indep. tensor components
character(len=16), parameter :: FMT_fedsk2D_strain_rates  = '(I12,1X,3E15.6)'
#endif

#ifdef LongData
character(len=23), parameter :: FMT_fedsk2D_diff_displacement = '(I12,1X,I12,1X,2E25.16)' ! element, vertex, 
#else
character(len=23), parameter :: FMT_fedsk2D_diff_displacement = '(I12,1X,I12,1X,2E15.6)' ! element, vertex, 
#endif
!diff.displacement

#ifdef LongData
character(len=16), parameter :: FMT_fedsk3D_displacement  = '(I12,1X,3E25.16)'
#else
character(len=16), parameter :: FMT_fedsk3D_displacement  = '(I12,1X,3E15.6)'
#endif

#ifdef LongData
character(len=16), parameter :: FMT_fedsk3D_velocities    = '(I12,1X,3E25.16)'
character(len=16), parameter :: FMT_fedsk3D_stress        = '(I12,1X,6E25.16)'  ! 6 for the 6 indep. tensor components
character(len=16), parameter :: FMT_fedsk3D_strain        = '(I12,1X,6E25.16)'  ! 6 for the 6 indep. tensor components
character(len=16), parameter :: FMT_fedsk3D_strain_rates  = '(I12,1X,6E25.16)'  ! 6 for the 6 indep. tensor components
#else
character(len=16), parameter :: FMT_fedsk3D_velocities    = '(I12,1X,3E15.6)'
character(len=16), parameter :: FMT_fedsk3D_stress        = '(I12,1X,6E15.6)'  ! 6 for the 6 indep. tensor components
character(len=16), parameter :: FMT_fedsk3D_strain        = '(I12,1X,6E15.6)'  ! 6 for the 6 indep. tensor components
character(len=16), parameter :: FMT_fedsk3D_strain_rates  = '(I12,1X,6E15.6)' 
#endif

#ifdef LongData
character(len=23), parameter :: FMT_fedsk3D_diff_displacement = '(I12,1X,I12,1X,3E25.16)' ! element, vertex, 
#else
character(len=23), parameter :: FMT_fedsk3D_diff_displacement = '(I12,1X,I12,1X,3E15.6)' ! element, vertex, 
#endif































































contains

subroutine MerryChristmas()
write(*,*) ".     .    O  .         O"
write(*,*) "  o       .       .   .    .               .     O"
write(*,*) "   .  o__.,--------.   O       O    .       o"
write(*,*) "     ,'            `.    .            O        . "
write(*,*) " O  /                 \     o    .                               "     
write(*,*) "   f .                 Y                                        "
write(*,*) " . |  \________________j  .        o     .      o               "
write(*,*) "   |  f                Y   .                     .              "
write(*,*) "  O|  l________________j          .         O                   "
write(*,*) "   | f|||||l ,--   --.||  O  o      ,----------------.           "
write(*,*) " . | |jjj|l`  ,-.  ,-.|l           f  Merry Christmas Y           "
write(*,*) "   j_j,-```  f  | f  ||-.   .      |       and a      |            "
write(*,*) "  f   Y (|   l_0, l_0,| j          l  Happy New Year! j           "  
write(*,*) "  l   jY |       `.   |f   O     .  `-._    ______.,-'           " 
write(*,*) "   `-' `-|,        )  l'            o   )  /    .               " 
write(*,*) "  o    ||f ,-  `--'  _ Y      o      _,' ,'                    "
write(*,*) "   O   jjj  `.       ,`| `-..___..,-'_.,'    O     o           "
write(*,*) "     . '''\   `-----'  j      `''''''                           "
write(*,*) " .      O  |.        ,'     o                  .                  "
write(*,*) "    o  .   | `-._.,-'   O         .    o         o                "
write(*,*) "      ____ |      l ____   .   O                                  "
write(*,*) "  o ,'-+-->l   -'  Y<--+`.   o                                    "
write(*,*) "   /+--+,' \`-.__,'| `.+--\      .    .    o                      "
write(*,*) "  /-+--+`-, \.____,j ,'+--+\  .                   O               "
write(*,*) " f--+--+-<   \    /  >-+--+-Y   o       O      .                   "
write(*,*) " j--+--+--`.  `. / ,'--+--+-l     O      o                        "
write(*,*) "f+--+--+--+-`.  Y /-+--+--+--Y  .             o                   "
write(*,*) "|+--+--+--+--+\ |f--+--+--+--|           .         .              "
write(*,*) "|+--+-f+--+--+-\|j--+--+Y-+--|  o           o                     "
write(*,*) "|+--+-|+--+--+--|+--+--+|-+--|                    o               "
write(*,*) "|+--+-|+--+--+--|+--+--+|-+--|"
end subroutine


subroutine HappyNewYear()
write(*,*) "                                 .''."
write(*,*) "       .''.             *''*    :_\/_:     ."
write(*,*) "      :_\/_:   .    .:.*_\/_*   : /\ :  .'.:.'."
write(*,*) "  .''.: /\ : _\(/_  ':'* /\ *  : '..'.  -=:o:=-"
write(*,*) " :_\/_:'.:::. /)\*''*  .|.* '.\'/.'_\(/_'.':'.'"
write(*,*) " : /\ : :::::  '*_\/_* | |  -= o =- /)\    '  *"
write(*,*) "  '..'  ':::'   * /\ * |'|  .'/.\'.  '._____"
write(*,*) "      *        __*..* |  |     :      |.   |' .---'|"
write(*,*) "       _*   .-'   '-. |  |     .--'|  ||   | _|    |"
write(*,*) "    .-'|  _.|  |    ||   '-__  |   |  |    ||      |"
write(*,*) "    |' | |.    |    ||       | |   |  |    ||      |"
write(*,*) " ___|  '-'     '             '-'   '-.'    '`      |____"
write(*,*) "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
write(*,*) "             H A P P Y   N E W   Y E A R "
end subroutine

END MODULE
