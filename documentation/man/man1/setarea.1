.TH SETAREA L "June 30, 2021" "University of Utrecht"
.UC 4
.SH NAME
setarea \- set refinement criteria for elements
.SH SYNOPSIS
\fBsetarea\fP basename [-p x y] [-l x1 y1 x2 y2] [-m mat] [-f factor] [-r type] [-a percentage] [-minsize min] [-maxsize max] [-x power]
.SH DESCRIPTION
\fBsetarea\fP is a program used in conjunction with the mesh generator \fItriangle\fP.
Its purpose is to generate an additional file for \fItriangle\fP such that
a subsequent mesh generation with \fItriangle\fP results in a new mesh with 
(local) refinements compared to the original mesh.
Running setarea on a mesh created by \fItriangle\fP defined by three files, typically named

domain.x.poly,
domain.x.node,
domain.x.ele,

with x an integer, by \fIsetarea\fP:

\fBsetarea domain.x [options]\fP

creates an area file 
domain.x.area
which contains for every element the maximum allowed area of its refinement child triangles.
This refinement can be applied by calling \fItriangle\fP as follows:

\fBtriangle -pqra domain.1\fP.

The \fB-r\fP (refine) option will cause \fItriangle\fP to read the .area file, refine the mesh, and write the results to three new files 

domain.x+1.poly,
domain.x+1.node,
domain.x+1.ele.

Note that \fBtriangle\fP limits strong gradients in element size. Multiple \fBtriangle\fP+\fBelmsize\fP iterations are therefore needed to create a strongly localized fine mesh.

\fIsetarea\fP allows for tuning the characteristic of the refinement. 
.SH ARGUMENTS
.TP
.BI "basename"
\fItriangle\fP base name, e.g., "domain.1".
.TP
.BI "-p x y"
For refinement towards a point \fI(x, y)\fP (this is the default with the point located in the middle of the domain).
The specified point does not need to be located in the domain.
.TP
.BI "-l x1 y1 x2 y2"
For refinement towards a line section given by begin and end points \fI(x1, y1)\fP and \fI(x2, y2)\fP. 
.PI
.TP
.BI "-m mat"
For refinement of elements with material marker \fImat\fP. There is no smoothing zone between the area with the material in question and surrounding regions.
.PI
.TP
.BI "-f factor"
\fIfactor\fP < 1, the refinement ratio (default 0.05). The area of the new elements at the location with the densest refinement will be this factor times the original area of the elements there.
.TP
.BI "-d distance"
Specify tapering distance from the line or point.
The area of elements within this range will be reduced depending on their actual distance from the line or point;
by the factor specified by \fB-f\fP close to the line or point, and less so further away.
Note that increasing the tapering distance may result in smaller elements in the target region (because triangle limits element size gradients). We recommend that you use a significant part of your domain size for the tapering distance.
.TP
.BI "-r type"
Parameter to tune the character of refining:
.TS
tab(@) expand;
rl.
0@ (default) refine elements by an amount that depends on the distance from a point or line
@ (tapered refinement). The smallest elements (close to the point or line) will be reduced
@ in size by a factor that is specified via \fB-f factor\fP.

1@ uniformly refine part of the domain given by the \fI-a\fP percentage (100% is entire domain). 
@ If \fI-a\fP is not given, the region within distance \fI-d\fP from the point or line is refined.

1002@ refine towards point/line of refinement over entire domain
@
@                                          distance
@ refinement factor = ( f + (1-f) * ---------------------- ) ^ power
@                                    ratio * max distance

1021@ same as 1002, but takes the maximum area (\fI-a\fP) into account, so the refinement does not necessarily 
@ cover the entire domain.

1003@ refine towards point/line of refinement over entire domain, according to
@
@                              distance
@ refinement factor = ( ---------------------- ) ^ power           
@                        ratio * max distance

1031@ same as 1003, but takes the maximum area (\fI-a\fP) into account, so the refinement does not necessarily
@ cover the entire domain.

1009@ George Marketos refinement

.TE
.TP
.BI "-a percentage"
Denotes which part of the domain should be refined (100 = entire domain);
used only by refinement types 1, 21 and 31. 
.TP
.BI "-minsize min"
Specify minimum area for elements that are to be refined. Smaller elements will remain unmodified by the refinement.
.PI
.TP
.BI "-maxsize max"
Specify maximum area for elements that are to be refined. Larger elements will remain unmodified by the refinement. 
.PI
.TP
.BI "-minrefresult min"
Specify minimum area for elements of refined grid. Note that this is an estimate only.
In case (original size * factor) is smaller than this number, the factor is changed to (minrefresult / original area). 
\fITriangle\fP will use this number as an indicator when refining the mesh, but will most likely not match it exactly.
.PI
.TP
.BI "-maxrefresult max"
Specify maximum area for elements of refined grid. Note that this is an estimate only.
In case (original size * factor) is larger than this number, the factor is changed to (maxrefresult / original area). 
\fITriangle\fP will use this number as an indicator when refining the mesh, but will most likely not match it exactly.
.PI
.TP
.BI "-x power"
To get super (>1) or sub (<1) linear refinement; used only by refinement types
2, 21, 3, 31. For high values of x, the refinement is concentrated closely around the target. For low values, the refinement tends to spread out more.
.SH EXAMPLES
An initial triangulation (e.g., from \fBtriangle -pqACa150 domain.poly\fP) of a 1000x1000 square domain results in nodes and elements contained in files named domain.1.[poly/node/ele]:


     0                 1000
       +----------------+----> x
       |. . . . . . . . .
       |. . . . . . . . .            
       |. . . . . . . . .            
       |. . . . . . . . .            
       |. . . . . . . . .            
       |. . . . . . . . .            
       |. . . . . . . . .            
 -1000 +. . . . . . . . .
       |
       v
       -y

\fBsetarea domain.1 > domain.1.area\fP creates a a file domain.1.area with new element areas.
To subsequently update the mesh with the new area constraints a next triangulation step is needed (e.g., \fBtriangle -rpqCa domain.1\fP). This results in a new mesh in files domain.2.[poly/node/ele].

Options can be used to control the element area reduction. For example, to gradually refine the top quarter of the domain we create a file domain.1.area with new element areas:
\fBsetarea domain.1 -l 0 0 1000 0 -a 25 -f 0.1 -r 1031 > domain.1.area\fP.

We subsequently update the mesh in a next triangulation step (e.g., \fBtriangle -rpqa domain.1\fP)
resulting in a new mesh in files domain.2.[poly/node/ele]:

     0                 1000
       +----------------+----> x
       |:::::::::::::::::
       |.................
       |. . . . . . . . .
       |. . . . . . . . .
       |. . . . . . . . .
       |. . . . . . . . .
       |. . . . . . . . .
 -1000 +. . . . . . . . .
       |
       v
       -y

 We could also refine around an interesting point, let us say (1000 -1000),
 \fBsetarea domain.1 -p 1000 -1000 -a 50 -f 0.1 -r 1031 > domain.1.area\fP
 Applying the generated domain.1.area will give a new mesh domain.2.[poly/node/ele]:

     0                 1000
       +----------------+----> x
       |. . . . . . . . . 
       |. . . . . . . . .
       |. . . . . . . ...
       |. . . . . .......
       |. . . . ........:
       |. . . .......::::
       |. . . .....::::::
 -1000 +. . .......::::::
       |
       v
       -y

We can increase the power of refinement closer to the corner by increasing the power
 \fBsetarea domain.1 -p 1000 -1000 -a 50 -f 0.1 -p 8 -r 1031 > domain.1.area\fP
 Applying the generated domain.1.area will give a new mesh domain.2.[poly/node/ele]:

     0                 1000
       +----------------+----> x
       |. . . . . . . . .
       |. . . . . . . . .
       |. . . . . . . . .
       |. . . . . . . . .
       |. . . . . . . . .
       |. . . . . . . ...
       |. . . . . . ...::
 -1000 +. . . . . . ..:::
       |
       v
       -y

.TE
.SH SEE ALSO
\fItriangle\fP, \fIpln\fP, \fIopn\fP
.SH AUTHORS
Rob Govers, Lukas van de Wiel
.SH BUGS
Report bugs to Rob Govers (r.govers@uu.nl)
